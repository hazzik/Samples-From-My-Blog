<?xml version="1.0" encoding="utf-8"?>
<xs:schema 
	id="bundleTransformerConfiguration"
	targetNamespace="http://tempuri.org/BundleTransformer.Configuration.xsd"
	elementFormDefault="qualified"
	xmlns="http://tempuri.org/BundleTransformer.Configuration.xsd"
	xmlns:mstns="http://tempuri.org/BundleTransformer.Configuration.xsd"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="bundleTransformer">
		<xs:annotation>
			<xs:documentation>Bundle Transformer configuration settings</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element name="core" type="CoreSettings_SchemaType" minOccurs="0" maxOccurs="1" />
				<xs:element name="less" type="LessSettings_SchemaType" minOccurs="0" maxOccurs="1" />
				<xs:element name="sassAndScss" type="SassAndScssSettings_SchemaType" minOccurs="0" maxOccurs="1" />
				<xs:element name="microsoftAjax" type="MicrosoftAjaxSettings_SchemaType" minOccurs="0" maxOccurs="1" />
				<xs:element name="yui" type="YuiSettings_SchemaType" minOccurs="0" maxOccurs="1" />
			</xs:all> 
		</xs:complexType>
	</xs:element>

	<!-- Simple types -->
	<xs:simpleType name="Boolean_SchemaType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="true" />
			<xs:enumeration value="false" />
		</xs:restriction>
	</xs:simpleType>
	<!-- /Simple types -->

	<!-- Core settings -->
	<xs:complexType name="CoreSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of core</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="css" type="AssetTypeSettings_SchemaType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Configuration settings of processing CSS-assets</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="js" type="AssetTypeSettings_SchemaType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Configuration settings of processing JS-assets</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
		<xs:attribute name="enableTracing" type="Boolean_SchemaType" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>Flag for whether to enable tracing</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="jsFilesWithMicrosoftStyleExtensions" type="xs:string" 
			use="optional" default="MicrosoftAjax.js,MicrosoftMvcAjax.js,MicrosoftMvcValidation.js,knockout-$version$.js">
			<xs:annotation>
				<xs:documentation>List of JS-files with Microsoft-style extensions</xs:documentation>
			</xs:annotation>			
		</xs:attribute>
	</xs:complexType>
	
	<xs:complexType name="AssetTypeSettings_SchemaType">
		<xs:all>
			<xs:element name="minifiers" type="MinifierRegistrationList_SchemaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="translators" type="TranslatorRegistrationList_SchemaType" minOccurs="0" maxOccurs="1" />
		</xs:all>
		<xs:attribute name="defaultMinifier" type="xs:string" use="optional" default="NullMinifier">
			<xs:annotation>
				<xs:documentation>Name of default minifier</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="MinifierRegistrationList_SchemaType">
		<xs:annotation>
			<xs:documentation>List of registered minifiers</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="add" type="AddMinifierRegistration_SchemaType" />
			<xs:element name="remove" type="RemoveMinifierRegistration_SchemaType" />
			<xs:element name="clear" type="ClearMinifierRegistration_SchemaType" />
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="AddMinifierRegistration_SchemaType">
		<xs:annotation>
			<xs:documentation>Adds minifier registration</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AddAssetProcessorRegistrationBase_SchemaType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="RemoveMinifierRegistration_SchemaType">
		<xs:annotation>
			<xs:documentation>Removes minifier registration</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RemoveAssetProcessorRegistrationBase_SchemaType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="ClearMinifierRegistration_SchemaType">
		<xs:annotation>
			<xs:documentation>Removes all minifier registrations, that specified above</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ClearAssetProcessorRegistrationBase_SchemaType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="TranslatorRegistrationList_SchemaType">
		<xs:annotation>
			<xs:documentation>List of registered translators</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="add" type="AddTranslatorRegistration_SchemaType" />
			<xs:element name="remove" type="RemoveTranslatorRegistration_SchemaType" />
			<xs:element name="clear" type="ClearTranslatorRegistration_SchemaType" />
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="AddTranslatorRegistration_SchemaType">
		<xs:annotation>
			<xs:documentation>Adds translator registration</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AddAssetProcessorRegistrationBase_SchemaType">
				<xs:attribute name="enabled" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Flag for whether to enable translator</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="RemoveTranslatorRegistration_SchemaType">
		<xs:annotation>
			<xs:documentation>Removes translator registration</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RemoveAssetProcessorRegistrationBase_SchemaType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="ClearTranslatorRegistration_SchemaType">
		<xs:annotation>
			<xs:documentation>Removes all translator registrations, that specified above</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ClearAssetProcessorRegistrationBase_SchemaType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AddAssetProcessorRegistrationBase_SchemaType" abstract="true">
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Processor name</xs:documentation>
			</xs:annotation>			
		</xs:attribute>
		<xs:attribute name="type" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Processor .NET-type name</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="RemoveAssetProcessorRegistrationBase_SchemaType" abstract="true">
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Processor name</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ClearAssetProcessorRegistrationBase_SchemaType" abstract="true" />
	<!-- /Core settings -->

	<!-- LESS settings -->
	<xs:complexType name="LessSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of LESS-translator</xs:documentation>
		</xs:annotation>
		<xs:attribute name="useNativeMinification" type="Boolean_SchemaType" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>Flag for whether to allow the use of native minification</xs:documentation>
			</xs:annotation>			
		</xs:attribute>
	</xs:complexType>
	<!-- /LESS settings -->

	<!-- Sass and SCSS settings -->
	<xs:complexType name="SassAndScssSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of Sass- and SCSS-translator</xs:documentation>
		</xs:annotation>
		<xs:attribute name="useNativeMinification" type="Boolean_SchemaType" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>Flag for whether to allow the use of native minification</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- /Sass and SCSS settings -->

	<!-- Microsoft Ajax settings -->
	<xs:complexType name="MicrosoftAjaxSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of Microsoft Ajax Minifier</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="css" type="MicrosoftAjaxCssMinifierSettings_SchemaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="js" type="MicrosoftAjaxJsMinifierSettings_SchemaType" minOccurs="0" maxOccurs="1" />
		</xs:all>
	</xs:complexType>

	<xs:complexType name="MicrosoftAjaxCssMinifierSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of Microsoft Ajax CSS-Minifier</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MicrosoftAjaxMinifierSettingsBase_SchemaType">
				<xs:attribute name="colorNames" use="optional" default="Strict">
					<xs:annotation>
						<xs:documentation>ColorNames setting</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:NMTOKEN">
							<xs:enumeration value="Strict" />
							<xs:enumeration value="Hex" />
							<xs:enumeration value="Major" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="commentMode" use="optional" default="Important">
					<xs:annotation>
						<xs:documentation>CommentMode setting</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:NMTOKEN">
							<xs:enumeration value="Important" />
							<xs:enumeration value="None" />
							<xs:enumeration value="All" />
							<xs:enumeration value="Hacks" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="minifyExpressions" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Value indicating whether to minify the JavaScript within expression functions</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="MicrosoftAjaxJsMinifierSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of Microsoft Ajax JS-Minifier</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MicrosoftAjaxMinifierSettingsBase_SchemaType">
				<xs:attribute name="collapseToLiteral" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Flag for whether to collapse new Array() to [] and new Object() to {} [true] or leave as-is [false]</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="combineDuplicateLiterals" type="Boolean_SchemaType" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>Flag for whether to combine duplicate literals within function scopes to local variables [true] or leave them as-is [false]</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="debugLookupList" type="xs:string" use="optional" default="Debug,$Debug,WAssert,Msn.Debug,Web.Debug">
					<xs:annotation>
						<xs:documentation>String representation of the list of debug lookups, comma-separated</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="evalTreatment" use="optional" default="Ignore">
					<xs:annotation>
						<xs:documentation>EvalTreatment setting</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:NMTOKEN">
							<xs:enumeration value="Ignore" />
							<xs:enumeration value="MakeImmediateSafe" />
							<xs:enumeration value="MakeAllSafe" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="ignoreConditionalCompilation" type="Boolean_SchemaType" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>Flag for whether or not to ignore conditional-compilation comment syntax (true) or to try to retain the comments in the output (false; default)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="inlineSafeStrings" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Flag for whether to break up string literals containing &lt;/script&gt; so inline code won't break [true].
Leave string literals as-is [false].</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="knownGlobalNamesList" type="xs:string" use="optional" default="">
					<xs:annotation>
						<xs:documentation>The known global names list as a single comma-separated string</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="localRenaming" use="optional" default="CrunchAll">
					<xs:annotation>
						<xs:documentation>Value indicating whether to how to rename local variables and functions:
KeepAll - do not rename local variables and functions;
CrunchAll - rename all local variables and functions to shorter names;
KeepLocalizationVars - rename all local variables and functions that do NOT start with L_</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:NMTOKEN">
							<xs:enumeration value="KeepAll" />
							<xs:enumeration value="KeepLocalizationVars" />
							<xs:enumeration value="CrunchAll" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="macSafariQuirks" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Value indicating whether to add characters to the output to make sure Mac Safari bugs are not generated [true].
Disregard potential Mac Safari bugs [false].</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="minifyCode" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Flag for whether to modify the source code's syntax tree to provide the smallest equivalent output [true].
Do not modify the syntax tree [false].</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="noAutoRenameList" type="xs:string" use="optional" default="$super">
					<xs:annotation>
						<xs:documentation>The no-automatic-renaming list as a single string of comma-separated identifiers</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="preserveFunctionNames" type="Boolean_SchemaType" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>Value indicating whether all function names must be preserved and remain as-named</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="preserveImportantComments" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Value indicating whether to preserve important comments in the output.
Default is true.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="removeFunctionExpressionNames" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Value indicating whether or not to remove unreferenced function expression names</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="removeUnneededCode" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Remove unneeded code, like uncalled local functions [true].
Keep all code [false].</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="renamePairs" type="xs:string" use="optional" default="">
					<xs:annotation>
						<xs:documentation>String representation of all the indentifier replacements as a comma-separated list of "source=target" identifiers</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="strictMode" type="Boolean_SchemaType" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>Boolean value indicating whether or not to force the input code into strict mode (can still specify strict-mode in the sources if this value is false)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="stripDebugStatements" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Strip debug statements [true].
Leave debug statements [false].</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="MicrosoftAjaxMinifierSettingsBase_SchemaType">
		<xs:attribute name="allowEmbeddedAspNetBlocks" type="Boolean_SchemaType" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>Embedded ASP.NET blocks (&lt;% %&gt;) should be recognized and output as is</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ignoreErrorList" type="xs:string" use="optional" default="">
			<xs:annotation>
				<xs:documentation>String representation of the list of debug lookups, comma-separated</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="indentSize" type="xs:int" use="optional" default="4">
			<xs:annotation>
				<xs:documentation>Number of spaces per indent level when in MultipleLines output mode</xs:documentation>
			</xs:annotation>			
		</xs:attribute>
		<xs:attribute name="outputMode" use="optional" default="SingleLine">
			<xs:annotation>
				<xs:documentation>Output mode:
SingleLine - output all code on a single line;
MultipleLines - break the output into multiple lines to be more human-readable</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:NMTOKEN">
					<xs:enumeration value="SingleLine" />
					<xs:enumeration value="MultipleLines" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="preprocessorDefineList" type="xs:string" use="optional" default="">
			<xs:annotation>
				<xs:documentation>String representation of the list of names defined for the preprocessor, comma-separated</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="termSemicolons" type="Boolean_SchemaType" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>Flag for whether to add a semicolon at the end of the parsed code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="severity" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>Severity level of errors:
 0 - syntax error;
 1 - the programmer probably did not intend to do this;
 2 - this can lead to problems in the future;
 3 - this can lead to performance problems;
 4 - this is just not right</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0" />
					<xs:maxInclusive value="4" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<!-- /Microsoft Ajax settings -->

	<!-- YUI settings -->
	<xs:complexType name="YuiSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of YUI Minifier</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="css" type="YuiCssMinifierSettings_SchemaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="js" type="YuiJsMinifierSettings_SchemaType" minOccurs="0" maxOccurs="1" />
		</xs:all>
	</xs:complexType>

	<xs:complexType name="YuiCssMinifierSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of YUI CSS-Minifier</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="YuiMinifierSettingsBase_SchemaType">
				<xs:attribute name="compressionType" use="optional" default="StockYuiCompressor">
					<xs:annotation>
						<xs:documentation>Type of compression CSS-code</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:NMTOKEN">
							<xs:enumeration value="None" />
							<xs:enumeration value="Hybrid" />
							<xs:enumeration value="MichaelAshRegexEnhancements" />
							<xs:enumeration value="StockYuiCompressor" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="removeComments" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Flag for whether to remove all comments except "important" comments</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="YuiJsMinifierSettings_SchemaType">
		<xs:annotation>
			<xs:documentation>Configuration settings of YUI JS-Minifier</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="YuiMinifierSettingsBase_SchemaType">
				<xs:attribute name="compressionType" use="optional" default="YuiStockCompression">
					<xs:annotation>
						<xs:documentation>Type of compression JavaScript-code</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:NMTOKEN">
							<xs:enumeration value="None" />
							<xs:enumeration value="YuiStockCompression" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="isVerboseLogging" type="Boolean_SchemaType" use="optional" default="true">
					<xs:annotation>
						<xs:documentation>Flag for whether to allow display informational messages and warnings</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isObfuscateJavascript" type="Boolean_SchemaType" use ="optional" default="true">
					<xs:annotation>
						<xs:documentation>Flag for whether to allow obfuscation of code</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="preserveAllSemicolons" type="Boolean_SchemaType" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>Flag for whether to preserve unnecessary semicolons (such as right before a '}')
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="disableOptimizations" type="Boolean_SchemaType" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>Flag for whether to disable all the built-in micro optimizations</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isEvalIgnored" type="Boolean_SchemaType" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>Flag for whether to ignore when processing code, that executed in eval operator</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="YuiMinifierSettingsBase_SchemaType">
		<xs:attribute name="lineBreakPosition" type="xs:int" use="optional" default="-1">
			<xs:annotation>
				<xs:documentation>Column number, after which must be inserted a line break.
Specify 0 to get a line break after each semi-colon in JavaScript, and after each rule in CSS.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- /YUI settings -->
</xs:schema>